let frontListTemplateV1 = "<!DOCTYPE html>\r\n<html lang=\"zh\" xmlns:th=\"http://www.thymeleaf.org\" xmlns:shiro=\"http://www.pollix.at/thymeleaf/shiro\">\r\n<head>\r\n    <th:block th:include=\"include :: header\" />\r\n</head>\r\n<body class=\"gray-bg\">\r\n     <div class=\"container-div\">\r\n        <div class=\"row\">\r\n<% if (hasQuery) { %> \r\n            <div class=\"col-sm-12 search-collapse\">\r\n                <form id=\"formId\">\r\n                    <div class=\"select-list\">\r\n                        <ul>\r\n    <% for(var i = 0; i < queryColumns.length; i++){ %>\r\n                        <% if (queryColumns[i].formType == \'Input\') { %> \r\n                            <li>\r\n                                <label><%= queryColumns[i].remark %></label>\r\n                                <input type=\"text\" name=\"<%= queryColumns[i].changeColumnName %>\"/>\r\n                            </li>\r\n                        <% } else if (queryColumns[i].formType == \'Textarea\') { %>\r\n                            <li>\r\n                                <label><%= queryColumns[i].remark %></label>\r\n                                <input type=\"text\" name=\"<%= queryColumns[i].changeColumnName %>\"/>\r\n                            </li>\r\n                        <% } else if (queryColumns[i].formType == \'Radio\') { %>\r\n                            <% if (queryColumns[i].dictName != \'\') { %> \r\n                            <li>\r\n                                <label><%= queryColumns[i].remark %></label>\r\n                                <select name=\"<%= queryColumns[i].changeColumnName %>\" th:with=\"type=${@dict.getType(\'<%= queryColumns[i].dictName %>\')}\">\r\n                                    <option value=\"\">所有</option>\r\n                                    <option th:each=\"dict : ${type}\" th:text=\"${dict.dictLabel}\" th:value=\"${dict.dictValue}\"></option>\r\n                                </select>\r\n                            </li>\r\n                            <% } else  {%>\r\n                            <li>\r\n                                <label><%= queryColumns[i].remark %></label>\r\n                                <input type=\"text\" name=\"<%= queryColumns[i].changeColumnName %>\"/>\r\n                            </li>\r\n                            <% } %>\r\n                        <% } else if (columns[i].formType == \'Select\') { %>\r\n                            <% if (queryColumns[i].dictName != \'\') { %> \r\n                            <li>\r\n                                <label><%= queryColumns[i].remark %></label>\r\n                                <select name=\"<%= queryColumns[i].changeColumnName %>\" th:with=\"type=${@dict.getType(\'<%= queryColumns[i].dictName %>\')}\">\r\n                                    <option value=\"\">所有</option>\r\n                                    <option th:each=\"dict : ${type}\" th:text=\"${dict.dictLabel}\" th:value=\"${dict.dictValue}\"></option>\r\n                                </select>\r\n                            </li>\r\n                            <% } else {%>\r\n                            <li>\r\n                                <label><%= queryColumns[i].remark %></label>\r\n                                <input type=\"text\" name=\"<%= queryColumns[i].changeColumnName %>\"/>\r\n                            </li>\r\n                            <% } %>\r\n                        <% } else if (columns[i].formType == \'Date\' \&\& columns[i].queryType != \'BetWeen\') { %>\r\n                            <li>\r\n                                <label><%= queryColumns[i].remark %></label>\r\n                                <input type=\"text\" class=\"time-input\" placeholder=\"请选择<%= queryColumns[i].remark %>\" name=\"<%= queryColumns[i].changeColumnName %>\"/>\r\n                            </li>\r\n                        <% } %>\r\n    <% } %>\r\n    <% for(var i = 0; i < betweens.length; i++){ %>\r\n                            <li class=\"select-time\">\r\n                                <label><%= queryColumns[i].remark %></label>\r\n                                <input type=\"text\" class=\"time-input\" placeholder=\"开始时间\" name=\"params[begin<%= betweens[i].capitalColumnName %>]\"/>\r\n                                <span>-</span>\r\n                                <input type=\"text\" class=\"time-input\" placeholder=\"结束时间\" name=\"params[end$<%= betweens[i].capitalColumnName %>]\"/>\r\n                            </li>\r\n     <% } %>\r\n                            <li>\r\n                                <a class=\"btn btn-primary btn-rounded btn-sm\" onclick=\"$.table.search()\"><i class=\"fa fa-search\"></i>\&nbsp;搜索</a>\r\n                                <a class=\"btn btn-warning btn-rounded btn-sm\" onclick=\"$.form.reset()\"><i class=\"fa fa-refresh\"></i>\&nbsp;重置</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n<% } %>\r\n            <div class=\"btn-group-sm\" id=\"toolbar\" role=\"group\">\r\n                <a class=\"btn btn-success\" onclick=\"$.operate.add()\">\r\n                    <i class=\"fa fa-plus\"></i> 添加\r\n                </a>\r\n                <a class=\"btn btn-primary single disabled\" onclick=\"$.operate.edit()\">\r\n                    <i class=\"fa fa-edit\"></i> 修改\r\n                </a>\r\n                <a class=\"btn btn-danger multiple disabled\" onclick=\"$.operate.removeAll()\">\r\n                    <i class=\"fa fa-remove\"></i> 删除\r\n                </a>\r\n                <a class=\"btn btn-warning\" onclick=\"$.table.exportExcel()\">\r\n                    <i class=\"fa fa-download\"></i> 导出\r\n                </a>\r\n            </div>\r\n            <div class=\"col-sm-12 select-table table-striped\">\r\n                <table id=\"bootstrap-table\"></table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <th:block th:include=\"include :: footer\" />\r\n    <script th:inline=\"javascript\">\r\n<% for(var i = 0; i < columns.length; i++){ %>\r\n    <% if (columns[i].dictName != \'\') { %> \r\n        var <%= columns[i].changeColumnName %>Datas = [[${@dict.getType(\'<%= columns[i].dictName %>\')}]];\r\n    <% } %>\r\n<% } %>\r\n        var prefix = ctx + \"<%= simpleName %>\";\r\n\r\n        $(function() {\r\n            var options = {\r\n                url: prefix + \"/list\",\r\n                createUrl: prefix + \"/add\",\r\n                updateUrl: prefix + \"/edit/{id}\",\r\n                removeUrl: prefix + \"/remove\",\r\n                exportUrl: prefix + \"/export\",\r\n                modalName: \"<%= simpleName %>\",\r\n                columns: [{\r\n                    checkbox: true\r\n                },\r\n                \r\n<% for(var i = 0; i < columns.length; i++){ %>\r\n <% if (columns[i].columnKey == \'PRI\') { %> \r\n                {\r\n                    field: \'<%= columns[i].changeColumnName %>\',\r\n                    title: \'<%= columns[i].remark %>\',\r\n                    visible: false\r\n                }\r\n <% } else if(columns[i].columnShow \&\& columns[i].dictName != \'\') {%>\r\n                {\r\n                    field: \'<%= columns[i].changeColumnName %>\',\r\n                    title: \'<%= columns[i].remark %>\',\r\n                    formatter: function(value, row, index) {\r\n                       return $.table.selectDictLabel(<%= columns[i].changeColumnName %>Datas, value);\r\n                    }\r\n                },\r\n <% } else if(columns[i].columnShow \&\& columns[i].dictName != \'\') {%>\r\n                {\r\n                    field: \'<%= columns[i].changeColumnName %>\',\r\n                    title: \'<%= columns[i].remark %>\',\r\n                },\r\n<% } %><% } %>\r\n                {\r\n                    title: \'操作\',\r\n                    align: \'center\',\r\n                    formatter: function(value, row, index) {\r\n                        var actions = [];\r\n                        actions.push(\'<a class=\"btn btn-success btn-xs\" href=\"javascript:void(0)\" onclick=\"$.operate.edit(\\\'\' + row.<%= pkChangeColName %> + \'\\\')\"><i class=\"fa fa-edit\"></i>编辑</a> \');\r\n                        actions.push(\'<a class=\"btn btn-danger btn-xs\" href=\"javascript:void(0)\" onclick=\"$.operate.remove(\\\'\' + row.<%= pkChangeColName %> + \'\\\')\"><i class=\"fa fa-remove\"></i>删除</a>\');\r\n                        return actions.join(\'\');\r\n                    }\r\n                }]\r\n            };\r\n            $.table.init(options);\r\n        });\r\n    </script>\r\n</body>\r\n</html>";
let frontAddTemplateV1 = "<!DOCTYPE html>\r\n<html lang=\"zh\" xmlns:th=\"http://www.thymeleaf.org\">\r\n<head>\r\n    <th:block th:include=\"include :: header\" />\r\n</head>\r\n<body class=\"white-bg\">\r\n    <div class=\"wrapper wrapper-content animated fadeInRight ibox-content\">\r\n        <form class=\"form-horizontal m\" id=\"form-<%= simpleName %>-add\">\r\n        <% for(var i = 0; i < columns.length; i++){ %>\r\n        <% if(columns[i].formShow) %>\r\n            <% if(columns[i].formShow) {%>\r\n                <% if(columns[i].formType == \'Input\') {%>\r\n                <div class=\"form-group\">    \r\n                    <label class=\"col-sm-3 control-label<% if(columns[i].istNotNull) {%> is-required <% } %>\"><%= columns[i].remark %>：</label>\r\n                    <div class=\"col-sm-8\">\r\n                        <input name=\"<%= columns[i].changeColumnName %>\" class=\"form-control\" type=\"text\"<% if(columns[i].istNotNull) {%> required<% } %>>\r\n                    </div>\r\n                </div>\r\n                <% } else if (columns[i].formType == \'Textarea\') { %>\r\n                 <div class=\"form-group\">    \r\n                    <label class=\"col-sm-3 control-label<% if(columns[i].istNotNull) {%> is-required <% } %>\"><%= columns[i].remark %>：</label>\r\n                    <div class=\"col-sm-8\">\r\n                        <textarea name=\"<%= columns[i].changeColumnName %>\" class=\"form-control\" <% if(columns[i].istNotNull) {%> required<% } %>></textarea>\r\n                    </div>\r\n                </div>\r\n                <% } else if (columns[i].formType == \'Radio\') { %>\r\n                <div class=\"form-group\">    \r\n                    <label class=\"col-sm-3 control-label<% if(columns[i].istNotNull) {%> is-required <% } %>\"><%= columns[i].remark %>：</label>\r\n                    <div class=\"col-sm-8\">\r\n                        <div class=\"radio-box\">\r\n                            <input type=\"radio\" name=\"<%= columns[i].changeColumnName %>\" value=\"\"<% if(columns[i].istNotNull) {%> required<% } %>>\r\n                            <label th:for=\"<%= columns[i].changeColumnName %>\" th:text=\"未知\"></label>\r\n                        </div>\r\n                        <span class=\"help-block m-b-none\"><i class=\"fa fa-info-circle\"></i> 代码生成请选择字典属性</span>\r\n                    </div>\r\n                </div>\r\n                <% } else if (columns[i].formType == \'Select\' ) { %>\r\n                        <%  if (columns[i].dictName != \'\' ) { %>\r\n                <div class=\"form-group\">    \r\n                    <label class=\"col-sm-3 control-label<% if(columns[i].istNotNull) {%> is-required <% } %>\"><%= columns[i].remark %>：</label>\r\n                    <div class=\"col-sm-8\">\r\n                        <select name=\"<%= columns[i].changeColumnName %>\" class=\"form-control m-b\" th:with=\"type=${@dict.getType(\'<%= columns[i].dictName %>\')}\"<% if(columns[i].istNotNull) {%> required<% } %>>\r\n                            <option th:each=\"dict : ${type}\" th:text=\"${dict.dictLabel}\" th:value=\"${dict.dictValue}\"></option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                        <% } else {%>  \r\n                <div class=\"form-group\">    \r\n                    <label class=\"col-sm-3 control-label#if($column.required) is-required#end\">${comment}：</label>\r\n                    <div class=\"col-sm-8\">\r\n                        <select name=\"<%= columns[i].changeColumnName %>\" class=\"form-control m-b\" th:with=\"type=${@dict.getType(\'<%= columns[i].dictName %>\')}\"<% if(columns[i].istNotNull) {%> required<% } %>>\r\n                            <option value=\"\">所有</option>\r\n                        </select>\r\n                        <span class=\"help-block m-b-none\"><i class=\"fa fa-info-circle\"></i> 代码生成请选择字典属性</span>\r\n                    </div>\r\n                </div>\r\n                        <% } %>\r\n                <% } else if (columns[i].formType == \'Date\') { %>\r\n                <div class=\"form-group\">    \r\n                    <label class=\"col-sm-3 control-label<% if(columns[i].istNotNull) {%> is-required <% } %>\"><%= columns[i].remark %>：</label>\r\n                    <div class=\"col-sm-8\">\r\n                        <div class=\"input-group date\">\r\n                            <input name=\"<%= columns[i].changeColumnName %>\" class=\"time-input form-control\" placeholder=\"yyyy-MM-dd\" type=\"text\"<% if(columns[i].istNotNull) {%> required<% } %>>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <% } %>\r\n            <% } %>\r\n        <% } %>\r\n        </form>\r\n    </div>\r\n    <th:block th:include=\"include :: footer\" />\r\n    <script th:inline=\"javascript\">\r\n        var prefix = ctx + \"<%= simpleName %>\";\r\n        $(\"#form-<%= simpleName %>-add\").validate({\r\n            focusCleanup: true\r\n        });\r\n        function submitHandler() {\r\n            if ($.validate.form()) {\r\n                $.operate.save(prefix + \"/add\", $(\'#form-<%= simpleName %>-add\').serialize());\r\n            }\r\n        }\r\n    </script>\r\n</body>\r\n</html>\r\n";
let adminDomainTemplateV1 = "package <%= _package %>.domain;\r\n\r\nimport com.baomidou.mybatisplus.annotation.*;\r\n\r\n<% if (hasDate) { %>\r\nimport java.util.Date;\r\n<% } %>\r\nimport java.io.Serializable;\r\nimport io.swagger.annotations.ApiModelProperty;\r\n<% if (isNotNullColumns) { %>\r\nimport javax.validation.constraints.*;\r\n<% } %>\r\n<% if (hasBigDecimal) { %>\r\nimport java.math.BigDecimal;\r\n<% } %>\r\n/**\r\n * <p>\r\n * <%= simpleName %>\r\n * </p>\r\n *\r\n * @author <%= author %>\r\n * @since <%= date %>\r\n */\r\n@TableName(\"<%= tableName %>\")\r\npublic class <%= className %> implements Serializable {\r\n\r\n    private static final long serialVersionUID = 1L;\r\n    <% for(var i = 0; i < columns.length; i++){ %>\r\n    <% if (columns[i].columnKey == \'PRI\') { %>@TableId(type = IdType.AUTO)<% } %>\r\n    <% if (columns[i].istNotNull \&\& columns[i].columnType == \'String\') { %>@NotBlank<% } else if(columns[i].istNotNull ) { %>@NotNull <% } %>\r\n    <% if (columns[i].remark != \'\') { %>@ApiModelProperty(value = \"<%= columns[i].remark %>\")<% } else { %>@ApiModelProperty(value = \"<%= columns[i].changeColumnName %>\")<% } %>\r\n    private <%= columns[i].columnType %> <%= columns[i].changeColumnName %>;\r\n    <% } %>\r\n    <% for(var i = 0; i < columns.length; i++){ %>\r\n    public <%= columns[i].columnType %> get<%= columns[i].capitalColumnName %>() {\r\n        return <%= columns[i].changeColumnName %>;\r\n    }\r\n    public void set<%= columns[i].capitalColumnName %>(<%= columns[i].columnType %> <%= columns[i].changeColumnName %>) {\r\n        this.<%= columns[i].changeColumnName %> = <%= columns[i].changeColumnName %>;\r\n    }<% } %>\r\n    \r\n\r\n}\r\n";
let adminMapperTemplateV1 = "package <%= _package %>.mapper;\r\n\r\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\r\nimport <%= _package %>.domain.<%= className %>;\r\n\r\n\r\n/**\r\n * <p>\r\n * <%= tableName %> Mapper 接口\r\n * </p>\r\n *\r\n * @author <%= author %>\r\n * @since <%= date %>\r\n */\r\npublic interface <%= className %>Mapper extends BaseMapper<<%= className %>> {\r\n\r\n}\r\n";
let adminMapperXmlTemplateV1 = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n<mapper namespace=\"<%= _package %>.mapper.<%= className %>Mapper\">\r\n    \r\n</mapper>\r\n";
let adminServiceTemplateV1 = "package <%= _package %>.service;\r\n\r\nimport com.baomidou.mybatisplus.extension.service.IService;\r\nimport <%= _package %>.domain.<%= className %>;\r\nimport <%= _package %>.framework.web.pojo.swaggermodel.DataGridModel;\r\n\r\n\r\n/**\r\n * <p>\r\n * <%= tableName %> 服务类\r\n * </p>\r\n *\r\n * @author <%= author %>\r\n * @since <%= date %>\r\n */\r\npublic interface I<%= className %>Service extends IService<<%= className %>> {\r\n  \r\n}\r\n";
let adminServiceImpTemplateV1 = "package <%= _package %>.service.impl;\r\n\r\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\r\nimport org.springframework.stereotype.Service;\r\nimport com.biobin.field.service.I<%= className %>Service;\r\nimport com.biobin.field.mapper.<%= className %>Mapper;\r\nimport <%= _package %>.domain.<%= className %>;\r\nimport cn.hutool.core.util.StrUtil;\r\nimport com.baomidou.mybatisplus.core.metadata.IPage;\r\nimport com.baomidou.mybatisplus.core.toolkit.Wrappers;\r\n\r\n/**\r\n * <p>\r\n * <%= tableName %> 服务实现类\r\n * </p>\r\n *\r\n * @author <%= author %>\r\n * @since <%= date %>\r\n */\r\n@Service\r\npublic class <%= className %>ServiceImpl extends ServiceImpl<<%= className %>Mapper, <%= className %>> implements I<%= className %>Service {\r\n\r\n}\r\n";
let adminControllerTemplateV1 = "package <%= _package %>.controller;\r\n\r\nimport com.baomidou.mybatisplus.core.toolkit.Wrappers;\r\nimport <%= _package %>.domain.<%= className %>;\r\nimport <%= _package %>.framework.web.base.BaseController;\r\nimport <%= _package %>.framework.web.pojo.swaggermodel.DataGridModel;\r\nimport <%= _package %>.framework.web.pojo.swaggermodel.ResultModel;\r\nimport com.biobin.field.framework.web.pojo.swaggermodel.SimpleResultModel;\r\nimport <%= _package %>.service.I<%= className %>Service;\r\nimport <%= _package %>.dto.<%= className %>PageReqDTO;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport javax.validation.Valid;\r\n\r\n\r\n/**\r\n * <p>\r\n * <%= tableName %> 前端控制器\r\n * </p>\r\n *\r\n * @author <%= author %>\r\n * @since <%= date %>\r\n */\r\n@Controller\r\n@RequestMapping(\"/<%= changeClassName %>\")\r\npublic class <%= className %>Controller extends BaseController {\r\n\r\n    @Autowired\r\n    private I<%= className %>Service <%= changeClassName %>Service;\r\n\r\n    @GetMapping\r\n    public String <%= changeClassName %>()  {\r\n        return prefix + \"/<%= changeClassName %>\";\r\n    }\r\n\r\n    @GetMapping(\"/list\")\r\n    public TableDataInfo list(<%= className %> <%= changeClassName %>) {\r\n        startPage();\r\n        //dto.setOrgId(ShiroUtils.getCurrentOrgId());\r\n        //dto.setCropId(ShiroUtils.getCurrentCropId());\r\n        List<<%= className %>> list =   <%= changeClassName %>Service.list( Wrappers.<<%= className %>>lambdaQuery()\r\n        <% for(var i = 0; i < queryColumns.length; i++){ %>\r\n        <% if (queryColumns[i].queryType == \'=\') { %>\r\n            <% if (queryColumns[i].columnType == \'String\') { %>\r\n            .eq(StrUtil.isNotEmpty(dto.get<%= queryColumns[i].capitalColumnName %>()), <%= className %>::get<%= queryColumns[i].capitalColumnName %>, dto.get<%= queryColumns[i].capitalColumnName %>())\r\n            <% } else {%>\r\n            .eq(ObjectUtil.isNull(dto.get<%= queryColumns[i].capitalColumnName %>()), <%= className %>::get<%= queryColumns[i].capitalColumnName %>, dto.get<%= queryColumns[i].capitalColumnName %>())\r\n            <% } %>\r\n        <% } %>\r\n        <% if (queryColumns[i].queryType == \'!=\') { %>\r\n            <% if (queryColumns[i].columnType == \'String\') { %>\r\n            .ne(StrUtil.isNotEmpty(dto.get<%= queryColumns[i].capitalColumnName %>()), <%= className %>::get<%= queryColumns[i].capitalColumnName %>, dto.get<%= queryColumns[i].capitalColumnName %>())\r\n            <% } else {%>\r\n            .ne(ObjectUtil.isNull(dto.get<%= queryColumns[i].capitalColumnName %>()), <%= className %>::get<%= queryColumns[i].capitalColumnName %>, dto.get<%= queryColumns[i].capitalColumnName %>())\r\n            <% } %>        \r\n        <% } %>\r\n        <% if (queryColumns[i].queryType == \'>=\') { %>\r\n            <% if (queryColumns[i].columnType == \'String\') { %>\r\n            .ge(StrUtil.isNotEmpty(dto.get<%= queryColumns[i].capitalColumnName %>()), <%= className %>::get<%= queryColumns[i].capitalColumnName %>, dto.get<%= queryColumns[i].capitalColumnName %>())\r\n            <% } else {%>\r\n            .ge(ObjectUtil.isNull(dto.get<%= queryColumns[i].capitalColumnName %>()), <%= className %>::get<%= queryColumns[i].capitalColumnName %>, dto.get<%= queryColumns[i].capitalColumnName %>())\r\n            <% } %>               \r\n        <% }  %>\r\n        <% if (queryColumns[i].queryType == \'<=\') { %>\r\n            <% if (queryColumns[i].columnType == \'String\') { %>\r\n            .ge(StrUtil.isNotEmpty(dto.get<%= queryColumns[i].capitalColumnName %>()), <%= className %>::get<%= queryColumns[i].capitalColumnName %>, dto.get<%= queryColumns[i].capitalColumnName %>())\r\n            <% } else {%>\r\n            .ge(ObjectUtil.isNull(dto.get<%= queryColumns[i].capitalColumnName %>()), <%= className %>::get<%= queryColumns[i].capitalColumnName %>, dto.get<%= queryColumns[i].capitalColumnName %>())\r\n            <% } %>         \r\n        <% } %>\r\n        <% if (queryColumns[i].queryType == \'Like\') { %>\r\n            <% if (queryColumns[i].columnType == \'String\') { %>\r\n            .like(StrUtil.isNotEmpty(dto.get<%= queryColumns[i].capitalColumnName %>()), <%= className %>::get<%= queryColumns[i].capitalColumnName %>, dto.get<%= queryColumns[i].capitalColumnName %>())\r\n            <% } else {%>\r\n            .like(ObjectUtil.isNull(dto.get<%= queryColumns[i].capitalColumnName %>()), <%= className %>::get<%= queryColumns[i].capitalColumnName %>, dto.get<%= queryColumns[i].capitalColumnName %>())\r\n            <% } %>     \r\n        <% } %>\r\n        <% if (queryColumns[i].queryType == \'NotNull\') { %>\r\n            <% if (queryColumns[i].columnType == \'String\') { %>\r\n            .notNull(StrUtil.isNotEmpty(dto.get<%= queryColumns[i].capitalColumnName %>()), <%= className %>::get<%= queryColumns[i].capitalColumnName %>, dto.get<%= queryColumns[i].capitalColumnName %>())\r\n            <% } else {%>\r\n            .notNull(ObjectUtil.isNull(dto.get<%= queryColumns[i].capitalColumnName %>()), <%= className %>::get<%= queryColumns[i].capitalColumnName %>, dto.get<%= queryColumns[i].capitalColumnName %>())\r\n            <% } %>\r\n        <% } %>\r\n        <% } %>\r\n        );\r\n        return getDataTable(list);\r\n    }\r\n\r\n    @GetMapping(\"/add\")\r\n    public String add(){\r\n        return prefix + \"/add\";\r\n    }\r\n\r\n    @PostMapping(\"/add\")\r\n    @ResponseBody\r\n    public AjaxResult create<%= className %>(@Valid <%= className %> <%= changeClassName %>) {\r\n        return toAjax( <%= changeClassName %>Service.save(<%= changeClassName %>));\r\n    }\r\n\r\n    @GetMapping(\"/edit/{<%= pkChangeColName %>}\")\r\n    public String edit(@PathVariable(\"<%= pkChangeColName %>\") <%= pkColumnType %> <%= pkChangeColName %>, ModelMap mmap) {\r\n        <%= className %> <%= changeClassName %> = <%= changeClassName %>Service.getById(<%= pkChangeColName %>);\r\n        mmap.put(\"<%= changeClassName %>\", <%= changeClassName %>);\r\n        return prefix + \"/edit\";\r\n    }\r\n\r\n    @PostMapping(\"/edit\")\r\n    @ResponseBody\r\n    public AjaxResult update$<%= className %>(@Valid <%= className %> <%= changeClassName %>) {\r\n        return toAjax(<%= changeClassName %>Service.updateById(<%= changeClassName %>));\r\n    }\r\n\r\n    @PostMapping(\"/remove\")\r\n   @ResponseBody\r\n    public AjaxResult remove(String ids) {\r\n        return toAjax(<%= changeClassName %>Service.removeByIds(StrUtil.splitTrim(ids, \",\")));\r\n    }\r\n\r\n}";
export { 
    frontListTemplateV1,
    frontAddTemplateV1,
    adminDomainTemplateV1,
    adminMapperTemplateV1,
    adminMapperXmlTemplateV1,
    adminServiceTemplateV1,
    adminServiceImpTemplateV1,
    adminControllerTemplateV1
}